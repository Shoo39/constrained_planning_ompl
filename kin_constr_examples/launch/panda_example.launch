 <launch>

    <arg name="rviz_config" value="$(find kin_constr_examples)/launch/panda.rviz"/>
    <arg name="use_gui" default="false" />

    <!-- By default, we are not in debug mode -->
    <arg name="debug" default="false" />
    <arg name="pipeline" default="ompl" />

    <include file="$(find panda_base_moveit_config)/launch/planning_context.launch">
        <arg name="load_robot_description" value="true"/>
    </include>

    <!-- We do not have a robot connected, so publish fake joint states -->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
        <param name="use_gui" value="$(arg use_gui)"/>
        <rosparam param="source_list">[move_group/fake_controller_joint_states]</rosparam>
    </node>

    <!-- Given the published joint states, publish tf for the robot links -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />

    <!-- Run the main MoveIt executable without trajectory execution (we do not have controllers configured by default) -->
    <include file="$(find panda_base_moveit_config)/launch/move_group.launch">
        <arg name="allow_trajectory_execution" value="true"/>
        <arg name="fake_execution" value="true"/>
        <arg name="info" value="true"/>
        <arg name="debug" value="$(arg debug)"/>
        <arg name="pipeline" value="$(arg pipeline)"  />
    </include>

    <node name="$(anon rviz)" pkg="rviz" type="rviz" respawn="false" args="-d $(arg rviz_config)" output="screen" />

    <!-- <node name="kin_constr_panda_example" pkg="kin_constr_examples" type="kin_constr_examples_panda_example" output="screen"/> -->

</launch>